#summary Understanding the basic commands.
= Introduction =

The Qt interface provides the main interface with the application. It still contain some debug purposes only widgets, but it is fairly simple to understand.

= Details =

Since this is a _Beta_ version, not all boxes are clickable safe, that is, they are not always enabled and disabled appropiately with each kind of model.

==Pyramid Points===

This is the basic Pyramid Point Rendering as described in:
[http://www.lcg.ufrj.br/Projetos/pbr]

==Tree Rendering==

Sorry, this mode is broken, I'll fix it in the next few days.

==Models with Level-of-Detail Structure==

The Lod check box for example should only be used when a _.lod_ model has been loaded.
The point-based LOD rendering is still a work in progress, thus the reason for its significant bad performance compared to the plain point rendering.

More details about this project can be found at:
[http://www.lcg.ufrj.br/Projetos/object-textures]

The color bars depicts the number/percentage of points being rendered at each of the four possible LOD levels, where the colors are respectively from coarsest to finest:
Ruby - Turquoise - Gold - Silver

When the *Write LOD* option under the *File* menu is selected, a file with the same name as the read model with an extra *.lod* at the end is created with the Level-of-Detail structure. Right now a _Kd-Tree_ is used to merge the splats and create the resolution levels, but a better and more robust version with a _Point Octree_ is under development and will soon be incorporated to the system. 

*Note* that the code with the _Kd-Tree_ is a very weak implementation of the multi-resolution structure and doesn't work for all models. It was quickly implemented just to test the LOD code using the geometry shader. This issues will be corrected with the new version.

==Ellipse Rasterization==

This mode is still at an early construction stage. More info about this will be available soon.